@using Microsoft.AspNetCore.Components.Web
@using TrainingQuestCsharp.Shared.Models;
@inject HttpClient httpClient

<h2>Time: @time</h2>
<button @onclick="Submit">Click</button>

<table class="table">
    <thead>
        <tr>
            <th>Timestamp</th>
            @foreach (string path in headerPaths)
            {
                <th>@path</th>
            }
           
        </tr>
    </thead>
    <tbody>
        @foreach (var vr in vrp)
        {
            <tr>
                <td>@vr.FirstOrDefault().Key.ToString()</td>
                @foreach (var vp in vr.FirstOrDefault().Value)
                {
                    <td>@vp.Value.ToString()</td>
                }
                
            </tr>
            
        }
    </tbody>
</table>

<h3>Aufgabe</h3>
<p>Unterhalb dieses Texts soll die Tabelle entstehen.<br />Ihr Einstiegspunkt ist die Datei 'Pages/Index.razor', dort finden sie weitere Informationen</p>
<p>Die Tabelle muss als Zeilen-Header den Zeitstempel. Es ist ausreichend, die ersten 20 Zeitstempel darzustellen. Sortieren sie die Liste absteigend. <br /></p>

<p>Es steht Ihnen frei 'Table'-Elemente oder Grid oder HTML5-Sections zu verwenden.</p>
<p>Wir möchten aber darum bitten dennoch an die Usability des Nutzers zu denken.</p>

@code {
    string? time;
    List<Dictionary<DateTime, List<ValuePath>>>? vrp = new List<Dictionary<DateTime, List<ValuePath>>>();
    List<string> headerPaths = new List<string>();

    async Task Submit()
    {
        var response = await httpClient.GetAsync("/api/files/all");
        vrp = await response.Content.ReadFromJsonAsync<List<Dictionary<DateTime, List<ValuePath>>>>();

        headerPaths = vrp.Select(x => x.FirstOrDefault().Value.Select(y => y.Path)).FirstOrDefault().ToList();
    }
}
